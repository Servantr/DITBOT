const { Client, GatewayIntentBits, channelLink, InteractionCollector, DiscordAPIError, Partials, ChannelType, PermissionFlagsBits } = require('discord.js')
const { token } = require('./config.json');
const Discord = require('discord.js');
const { TextChannel } = require ('discord.js');



const client = new Client({ intents: [
    
    GatewayIntentBits.Guilds,
    GatewayIntentBits.DirectMessages,
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildBans,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    ], 
    partials: [Partials.Channel],
});

client.once('ready', () => {
    console.log(`–ó–∞–ø—É—â–µ–Ω –ø–æ–¥ —É—á–µ—Ç–∫–æ–π ${client.user.tag}`);
})

const { EmbedBuilder } = require('discord.js');
const { ButtonBuilder, ButtonStyle } = require('discord.js');
const { ActionRow } = require('discord.js');
const { InteractionType, ActionRowBuilder, ModalBuilder, TextInputBuilder, TextInputStyle, SelectMenuBuilder } = require('discord.js');
const {ComponentType} = require('discord.js');
const { TextInputComponent } = require('discord.js');
const fs = require("fs");
const { Embed } = require('discord.js');
const { channel } = require('diagnostics_channel');
const { typesetttext, cleanrainbow, cleanbw, english, redactor, betaread, soundbw,soundrainbow, koreist,chinese, anketa } = require('./embedstext.js');
const cron = require('cron');
client.setMaxListeners(Infinity);

client.on("messageCreate", async message => {
	if (message.content.toLowerCase().includes('–º–µ—Å—Å–∏ —Å –∫–∞–∫–∞–æ')) {
		message.channel.send('https://tenor.com/view/trollszn123-ronaldo-gif-18268194')
	};
	
	if (message.author.id === "276257562519666689") {
		if (message.content.toLowerCase().includes('–∫–∞–Ω–æ')) {
			message.channel.send('–ö–∞–Ω–æ –º–æ–º–µ–Ω—Ç...')
		}
	}
});

client.on("channelCreate", async channel => {
	if (channel.parentId === "1042796605373431879") return
	if (channel.name.toLowerCase().includes("ticket-") || channel.name.toLowerCase().includes("‚ö™-")) {
		const buttonembed = new EmbedBuilder()
			.setColor('b21f00')
			.setTitle(`1Ô∏è‚É£ –í—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É!`)
			.setDescription(`–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –Ω—É–∂–Ω–æ –µ—ë –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏ –∑–∞—Ç–µ–º –≤—ã–±—Ä–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø—Ä–µ—Ç–µ–Ω–¥—É–µ—Ç–µ.\n\n**–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.**`)

		const startbutton = new ActionRowBuilder()
			.addComponents(
				new ButtonBuilder()
					.setCustomId('start')
					.setLabel('üëâ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É üëà')
					.setStyle(ButtonStyle.Primary)
			);
		function sendmessage() {
			channel.send({ embeds: [buttonembed], components: [startbutton] })
		}
		setTimeout(sendmessage, 3000);
	};
});

client.on("interactionCreate", async i => {

	const startmodal = new ModalBuilder()
		.setCustomId('startmodal')
		.setTitle('–ó–∞—è–≤–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É')

	const nickname = new TextInputBuilder()
		.setCustomId('nickname')
		.setLabel('–í–∞—à–µ –∏–º—è –∏ –Ω–∏–∫ (Name/Nickname)')
		.setStyle(TextInputStyle.Short)
		.setRequired(true)
		.setPlaceholder('–í–∞—à–µ –∏–º—è –∏ –Ω–∏–∫ (Name/Nickname)')

	const ages = new TextInputBuilder()
		.setCustomId('age')
		.setLabel('–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
		.setStyle(TextInputStyle.Short)
		.setRequired(true)
		.setPlaceholder('18 –ª–µ—Ç')

	const social = new TextInputBuilder()
		.setCustomId('social')
		.setLabel('–í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã')
		.setStyle(TextInputStyle.Paragraph)
		.setRequired(true)
		.setPlaceholder('–Ø —Å–∏–ª—ë–Ω –≤... | –£ –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤...')

	const asking = new TextInputBuilder()
		.setCustomId('asking')
		.setLabel('–°–æ—Å—Ç–æ–∏—Ç–µ –ª–∏ –≤—ã –≥–¥–µ –Ω–∏–±—É–¥—å –µ—â—ë?')
		.setStyle(TextInputStyle.Short)
		.setRequired(true)
		.setPlaceholder('–Ø —Å–æ—Å—Ç–æ—é –≤ DIT... | –Ω–∏–≥–¥–µ –Ω–µ —Å–æ—Å—Ç–æ—é')
		
	const about = new TextInputBuilder()
		.setCustomId('about')
		.setLabel('–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ')
		.setStyle(TextInputStyle.Paragraph)
		.setRequired(true)
		.setPlaceholder('–õ—é–±–ª—é —á–∏—Ç–∞—Ç—å –º–∞–Ω–≥—É –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ—Ç–æ—à–æ–ø–µ...')

	const nicknamerow = new ActionRowBuilder().addComponents(nickname);
	const agesrow = new ActionRowBuilder().addComponents(ages);
	const socialrow = new ActionRowBuilder().addComponents(social);
	const askingrow = new ActionRowBuilder().addComponents(asking);
	const aboutrow = new ActionRowBuilder().addComponents(about);

	startmodal.addComponents(nicknamerow, agesrow, socialrow, askingrow, aboutrow);

	if (i.customId === "start") {
		if (i.guild.channels.cache.get(i.channel.id).parentId==='943206789573390456' //—Ç–∞–π–ø–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207045488857088' //—á–±-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='1051540198443462736' //—Ü–≤–µ—Ç-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207090330173510' //–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∏
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207121305075732' //—Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='941668436151525436' //–±–µ—Ç—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='971490776695590965') {
			i.channel.send(`<@${i.user.id}>, –≤—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–Ω–∏ –∞–Ω–∫–µ—Ç—É, –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –∑–∞–ø–æ–ª–Ω—è—Ç—å –µ—ë –≤—Ç–æ—Ä–æ–π —Ä–∞–∑.`)
		} else {
		await i.showModal(startmodal);
		}
	}
	
	menu = new ActionRowBuilder()
			.addComponents(
				new Discord.SelectMenuBuilder()
					.setCustomId('choose')
					.setPlaceholder('–Ø —Ö–æ—á—É –±—ã—Ç—å...')
					.addOptions(
						{
							label: 'üî¥ –¢–∞–π–ø–µ—Ä',
							description: '–í—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –±–∞–±–ª—ã',
							value: 'typesett',
						},
						{
							label: 'üü† –ß–ë-–ö–ª–∏–Ω–µ—Ä',
							description: '–û—á–∏—â–∞–µ—Ç –ß–ë –±–∞–±–ª—ã –∏ –∑–≤—É–∫–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞',
							value: 'cleanbw',
						},
						{
							label: 'üü° –¶–í–ï–¢-–ö–ª–∏–Ω–µ—Ä',
							description: '–û—á–∏—â–∞–µ—Ç –¶–í–ï–¢ –±–∞–±–ª—ã –∏ –∑–≤—É–∫–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞',
							value: 'cleanrnbw',
						},
						{
							label: 'üü¢ –ê–Ω–≥–ª–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ',
							value: 'english',
						},
						{
							label: 'üü¢ –ö–æ—Ä–µ–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ö–æ—Ä–µ–π—Å–∫–æ–≥–æ',
							value: 'korean',
						},
						{
							label: 'üü¢ –ö–∏—Ç–∞–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ö–∏—Ç–∞–π—Å–∫–æ–≥–æ',
							value: 'chinese',
						},
						{
							label: 'üîµ –†–µ–¥–∞–∫—Ç–æ—Ä',
							description: '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ',
							value: 'redactor',
						},
						{
							label: 'üü£ –ë–µ—Ç–∞-—Ä–∏–¥–µ—Ä',
							description: '–ü—Ä–∏–¥–∏—Ä—á–∏–≤—ã–π —á–∏—Ç–∞—Ç–µ–ª—å, –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–µ–¥ –≤—ã–∫–ª–∞–¥–∫–æ–π',
							value: 'betaread',
						},
						{
							label: 'üî∂ –ß–ë-–ó–≤—É–∫–æ–≤–∏–∫',
							description: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–≤—É–∫–æ–≤ –≤ –ß–ë-—Ç–∞–π—Ç–ª–∞—Ö',
							value: 'soundbw',
						},
						{
							label: 'üî∑ –¶–í–ï–¢-–ó–≤—É–∫–æ–≤–∏–∫',
							description: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–≤—É–∫–æ–≤ –≤ –¶–í–ï–¢-—Ç–∞–π—Ç–ª–∞—Ö',
							value: 'soundrnbw',
						},
						
					)
							
			)
	
		if (i.customId === "startmodal") {
		
		const nicknameresult = i.fields.getTextInputValue('nickname');
		const agesresult = i.fields.getTextInputValue('age');
		const aboutresult = i.fields.getTextInputValue('about');
		const socialresult = i.fields.getTextInputValue('social');
		const askingresult = i.fields.getTextInputValue('asking');
		
		const portfolio = new EmbedBuilder()
			.setColor('b21f00')
			.setTitle('2Ô∏è‚É£ –ò –µ—â—ë –∫–æ–µ —á—Ç–æ!')
			.setDescription('**–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≤–∞—à–∏—Ö —Ä–∞–±–æ—Ç, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—à–ª–∏—Ç–µ –∏—Ö, –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —É–∑–Ω–∞—Ç—å –≤–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã! –ï—Å–ª–∏ –∂–µ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.**')
		
		const resultembed = new EmbedBuilder()
			.setColor('b21f00')
			.setTitle('–í–∞—à–∞ –∑–∞—è–≤–∫–∞')
			.setDescription(`1) ${nicknameresult}\n2) ${agesresult}\n3) ${socialresult}\n4) ${askingresult}\n5) ${aboutresult}\n\n–í–∞—à –Ω–∏–∫ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ: <@${i.user.id}>`)
			.setFooter({ text: `–û—Ç–ª–∏—á–Ω–æ, –æ—Å—Ç–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å!` })
			
		const embedgetrole = new EmbedBuilder()
			.setColor('b21f00')
			.setTitle('3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å')
			.setDescription('–ú–æ–∂–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞ –∫–∞–∂–¥—ã–π —Å–¥–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç!')
			.setFooter({text: `–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—é "–Ø —Ö–æ—á—É –±—ã—Ç—å..." –∏ –¥–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç`})
		
		await i.reply({ ephemeral: false, content: `<@${i.user.id}>, –≤–∞—à–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞`, embeds: [resultembed] }).catch(e => {console.log(`–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å \n ${e}`)});
		await i.channel.send({content: `<@${i.user.id}>`, embeds: [portfolio]});
		await i.channel.send({embeds: [embedgetrole], components: [menu]});
	}
	
});

client.on('messageCreate', async message => {
	if (message.content.toLowerCase().includes('–≤–∞—à–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞') && message.author.id === "829349664507166751") {
		message.pin();
	}
});

//–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –≤ –±–µ–ª—ã–π –∫—Ä—É–∂–æ–∫
client.on("channelCreate", async channel => {

	if (channel.name.toLowerCase().startsWith('ticket-')) {
		chna = channel.name;
		chna = chna.replace('ticket-', '');
		channel.setName(`‚ö™-`+chna);
	};

});

//–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
client.on("messageCreate", async message => {
	
	embedset = new EmbedBuilder()
		.setColor('b21f00')
		.setTitle('–í—ã–±–µ—Ä–∏, –∫–µ–º —Ç—ã —Ö–æ—á–µ—à—å –±—ã—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.')
		.setDescription('–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä–æ–ª—å –∑–∞ –∫–∞–∂–¥—ã–π —Å–¥–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç!')
	
	menu = new ActionRowBuilder()
			.addComponents(
				new Discord.SelectMenuBuilder()
					.setCustomId('choose')
					.setPlaceholder('–Ø —Ö–æ—á—É –±—ã—Ç—å...')
					.addOptions(
						{
							label: 'üî¥ –¢–∞–π–ø–µ—Ä',
							description: '–í—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –±–∞–±–ª—ã',
							value: 'typesett',
						},
						{
							label: 'üü† –ß–ë-–ö–ª–∏–Ω–µ—Ä',
							description: '–û—á–∏—â–∞–µ—Ç –ß–ë –±–∞–±–ª—ã –∏ –∑–≤—É–∫–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞',
							value: 'cleanbw',
						},
						{
							label: 'üü° –¶–í–ï–¢-–ö–ª–∏–Ω–µ—Ä',
							description: '–û—á–∏—â–∞–µ—Ç –¶–í–ï–¢ –±–∞–±–ª—ã –∏ –∑–≤—É–∫–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞',
							value: 'cleanrnbw',
						},
						{
							label: 'üü¢ –ê–Ω–≥–ª–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ',
							value: 'english',
						},
						{
							label: 'üü¢ –ö–æ—Ä–µ–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ö–æ—Ä–µ–π—Å–∫–æ–≥–æ',
							value: 'korean',
						},
						{
							label: 'üü¢ –ö–∏—Ç–∞–∏—Å—Ç',
							description: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –ö–∏—Ç–∞–π—Å–∫–æ–≥–æ',
							value: 'chinese',
						},
						{
							label: 'üîµ –†–µ–¥–∞–∫—Ç–æ—Ä',
							description: '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ',
							value: 'redactor',
						},
						{
							label: 'üü£ –ë–µ—Ç–∞-—Ä–∏–¥–µ—Ä',
							description: '–ü—Ä–∏–¥–∏—Ä—á–∏–≤—ã–π —á–∏—Ç–∞—Ç–µ–ª—å, –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–µ–¥ –≤—ã–∫–ª–∞–¥–∫–æ–π',
							value: 'betaread',
						},
						{
							label: 'üî∂ –ß–ë-–ó–≤—É–∫–æ–≤–∏–∫',
							description: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–≤—É–∫–æ–≤ –≤ –ß–ë-—Ç–∞–π—Ç–ª–∞—Ö',
							value: 'soundbw',
						},
						{
							label: 'üî∑ –¶–í–ï–¢-–ó–≤—É–∫–æ–≤–∏–∫',
							description: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–≤—É–∫–æ–≤ –≤ –¶–í–ï–¢-—Ç–∞–π—Ç–ª–∞—Ö',
							value: 'soundrnbw',
						},
						
					)
					
			)
	
	if (message.content.toLowerCase().startsWith('dit!—è –ø–µ—Ä–µ–¥—É–º–∞–ª') || message.content.toLowerCase().startsWith('dit!–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ç–µ—Å—Ç–∞')) {
		var n = 0;
		const userroles = ['776419385555681301', '1043183218498748516', '764158111388139580', '821877453084950576', '824370693562957934', '964968644486520903', '1023659545156931646', '880920185740070942', '955439462307999814', '955439462307999814', '861411342586347530', '964967880284311592']
		while (n != 10) {
			var role = message.guild.roles.cache.find(role => role.id = userroles[n]);
			var user = message.guild.members.cache.get(message.author.id);
			user.roles.remove(role);
			n += 1;
		}

		message.channel.send('**–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Ç–µ—Å—Ç–∞!** –°–µ–π—á–∞—Å —Å–Ω–∏–º—É —Å –≤–∞—Å —Ä–æ–ª—å –Ω–æ–≤–∏—á–∫–∞ –∏ –ø—Ä–∏—à–ª—é –Ω–∞ –≤—ã–±–æ—Ä –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏–ª—å–Ω–æ—Å—Ç–∏...\n\n*–ù–µ –≤—Ä–µ–º–µ–Ω–∏—Ç–µ —Å –≤—ã–±–æ—Ä–æ–º!*');
		function setnew() {
			//message.channel.setName(`‚ö™-${message.author.username}`).catch(e => {`–ö–∞–Ω–∞–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç \n ${e}`});
			message.channel.setParent('812507835027292191', {lockPermissions: false}).catch(e => {`–ö–∞–Ω–∞–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç \n ${e}`});
			message.channel.send({content: `–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ç–µ—Å—Ç <@${message.author.id}>`, embeds: [embedset], ephemeral: false, components: [menu]}).catch((e) => {console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å: \n ${e}`)});
		}
		setTimeout(setnew, 5000);
	}

});

//–†–ê–ë–û–¢–ê –° –¢–ò–ö–ï–¢–ê–ú–ò
client.on('interactionCreate', async i => {
	
	if (!i.isSelectMenu()) return;
	
	async function tickethelp(roleid, ticktest, tickparent, movetick, whotick, rolecolor, colorchoose, testlink) {
		
		check = i.guild.channels.cache.get(i.channel.id).name.includes("‚ö™") || i.guild.channels.cache.get(i.channel.id).name.includes("ticket");
		

		if (      i.guild.channels.cache.get(i.channel.id).parentId==='943206789573390456' //—Ç–∞–π–ø–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207045488857088' //—á–±-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='1051540198443462736' //—Ü–≤–µ—Ç-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207090330173510' //–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∏
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207121305075732' //—Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='941668436151525436' //–±–µ—Ç—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='971490776695590965') { //–∑–≤—É–∫–æ–≤–∏–∫–∏) {
			i.channel.send(`<@${i.user.id}>, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —ç—Ç–æ—Ç, –∞ —É–∂–µ –∑–∞—Ç–µ–º –ø—Ä–∏—Å—Ç—É–ø–∞–π—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É. \n\n *–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ —Å–¥–∞–≤–∞—Ç—å —ç—Ç–æ—Ç —Ç–µ—Å—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ \`dit!—è –ø–µ—Ä–µ–¥—É–º–∞–ª\` –∏–ª–∏ \`dit!–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ç–µ—Å—Ç–∞\`*`);
			return;
		}



			//–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
			var role = i.guild.roles.cache.find(role => role.id = roleid);
			var user = i.guild.members.cache.get(i.user.id);
			user.roles.add(role);
			
			//–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç
			const testlinkbutton = new ActionRowBuilder()
			.addComponents(
				new ButtonBuilder()
					.setLabel('‚ú® –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç ‚ú®')
					.setURL(testlink)
					.setStyle(ButtonStyle.Link),
			);
			
			//–≠–º–±–µ–¥ —Å —Ç–µ—Å—Ç–æ–º
			const embedwithtest = new EmbedBuilder()
			   .setTitle(`4Ô∏è‚É£ –¢–µ—Å—Ç –Ω–∞ ${whotick}`)
			   .setColor(colorchoose)
			   .setDescription(ticktest)
			
			
			//–û—Ç—Å—ã–ª–∞–µ—Ç —Ç–µ—Å—Ç –≤ —á–∞—Ç
			i.channel.send({
				content: `<@${i.user.id}>`,
				embeds: [embedwithtest],
				components: [testlinkbutton],
				ephemeral: false,
			});

			//–û—Ç—Å—ã–ª–∞–µ—Ç —Ç–µ—Å—Ç –≤ –ª—Å —é–∑–µ—Ä—É
			const userdm = await client.users.fetch(i.user.id);
			userdm.send(`__**–í—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ Dead Inside Team**__\n\n–í–∞—à —Ç–µ—Å—Ç: \n${ticktest}`).catch((e) => {console.log(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–æ –õ–°, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. \n ${e}`)});

			//–°–æ–æ–±—â–∞–µ—Ç –æ —Ç–æ–º —á—Ç–æ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
			i.channel.setParent(tickparent, {lockPermissions: false}) && i.channel.send(`–ü–µ—Ä–µ–¥–≤–∏–Ω—É–ª —Ç–≤–æ–π —Ç–∏–∫–µ—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å ${movetick}`)

			//–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª
			String.prototype.replaceAt = function(index, replacement) {
				return this.substring(0, index) + replacement + this.substring(index + 1);
			}

			let chname = i.guild.channels.cache.get(i.channel.id).name;
			function setName() {
				i.channel.setName(`${chname.replaceAt(0, rolecolor)}`);
			}
			setTimeout(setName, 2550);
		

			//–û—Ç—Å—ã–ª–∞–µ—Ç –≤ –ª–æ–≥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–π—Å—Ç–≤–∏–∏
			i.guild.channels.cache.get('1024324318232064081').send({
				content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> –∑–∞–ø—Ä–æ—Å–∏–ª(–∞) —Ç–µ—Å—Ç –Ω–∞ **${whotick}** –≤ –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>`,
				ephemeral: false,
			});	
		
	}
	
	let memory = (i.guild.channels.cache.get(i.channel.id).parentId === '812507835027292191' // —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943206789573390456' //—Ç–∞–π–ø–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207045488857088' //—á–±-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='1051540198443462736' //—Ü–≤–µ—Ç-–∫–ª–∏–Ω–µ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207090330173510' //–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∏
			   || i.guild.channels.cache.get(i.channel.id).parentId==='943207121305075732' //—Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='941668436151525436' //–±–µ—Ç—ã
			   || i.guild.channels.cache.get(i.channel.id).parentId==='971490776695590965'); //–∑–≤—É–∫–æ–≤–∏–∫–∏
    if (!memory) {
        i.reply({content:'–¢—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –∫–∞–Ω–∞–ª–µ —Ç–∏–∫–µ—Ç–∞', ephemeral: true});
    } else {
		
		if (i.customId === "choose") {
			let check = i.values[0];
			
			if (check === "typesett") {
				tickethelp('776419385555681301', typesetttext, '943206789573390456', '–¢–∞–π–ø–µ—Ä–∞–º–∏', '–¢–∞–π–ø–µ—Ä–∞', 'üî¥', 'e81224', 'https://discord.com/channels/662758924545687554/1017804591213068358/1017806674028929086')//.catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –¢–∞–π–ø–µ—Ä–æ–≤ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—è \n ${e}`)});
			}
			
			if (check === "cleanbw") {
				tickethelp('764158111388139580', cleanbw, '943207045488857088', '–ß–ë-–ö–ª–∏–Ω–µ—Ä–∞–º–∏', '–ß–ë-–ö–ª–∏–Ω–µ—Ä–∞', 'üü†', 'f7630c', 'https://docs.google.com/document/d/1ZYKRJeR_4afMxdgCxTybmBLFFU8CFdtNhW6iPXaW4a0/edit?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ß–ë-–ö–ª–∏–Ω–µ—Ä–æ–≤ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)});
			}
			
			if (check === "cleanrnbw") {
				tickethelp('821877453084950576', cleanrainbow, '1051540198443462736', '–¶–í–ï–¢-–ö–ª–∏–Ω–µ—Ä–∞–º–∏', '–¶–í–ï–¢-–ö–ª–∏–Ω–µ—Ä–∞', 'üü°', 'fff100', 'https://cdn.discordapp.com/attachments/866657284645584916/987019798007414794/947540138211291138.png').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –¶–í–ï–¢-–ö–ª–∏–Ω–µ—Ä–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)});			
			}
			
			if (check === "english") {
				tickethelp('824370693562957934', english, '943207090330173510', '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞–º–∏', '–ê–Ω–≥–ª–∏—Å—Ç–∞', 'üü¢', '16c60c', 'https://drive.google.com/drive/folders/13UPKn1TJtj_jhUm66UVh5rEEzc-cWV6x').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ê–Ω–≥–ª–∏—Å—Ç–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
				
			}
			
			if (check === "korean") {
				tickethelp('964968644486520903', koreist, '943207090330173510', '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞–º–∏', '–ö–æ—Ä–µ–∏—Å—Ç–∞', 'üü¢', '16c60c', 'https://drive.google.com/drive/folders/17NgniovVSoANUB9QH0CAqPti6ODZkTfv?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ö–æ—Ä–µ–∏—Å—Ç–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
				function setpos() {
					var korech = i.guild.channels.cache.get('1022501560145690664').position;
					i.channel.setPosition(korech + 0);
				}
				setTimeout(setpos, 2500);
			}
			
			
			if (check === "chinese") {
				tickethelp('1023659545156931646', chinese, '943207090330173510', '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞–º–∏', '–ö–∏—Ç–∞–∏—Å—Ç–∞', 'üü¢', '16c60c', 'https://drive.google.com/drive/folders/1j1ks6a8MvyJ2OlwZV8bgXFz8l35fNMIE?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ö–∏—Ç–∞–∏—Å—Ç–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
				function setpos() {
					var chich = i.guild.channels.cache.get('1023659183607914626').position;
					i.channel.setPosition(chich + 0);
				}
				setTimeout(setpos, 2500);
			}
			
			if (check === "redactor") {
				tickethelp('880920185740070942', redactor, '943207121305075732', '–†–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏', '–†–µ–¥–∞–∫—Ç–æ—Ä–∞', 'üîµ', '0078d7', 'https://docs.google.com/document/d/1chHWJZNPm9fk6O-wQzgrDR_XWnxvEqcs07nlHPYfhUM/edit').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –†–µ–¥–∞–∫—Ç–æ—Ä–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
			}
			
			if (check === "betaread") {
				tickethelp('955439462307999814', betaread, '941668436151525436', '–ë–µ—Ç–∞-—Ä–∏–¥–µ—Ä–∞–º–∏', '–ë–µ—Ç–∞-—Ä–∏–¥–µ—Ä–∞', 'üü£', '886ce4', 'https://drive.google.com/drive/folders/1--eyTyGX8rCOVDX1Yh-vHCPSeEG9fUM8?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ë–µ—Ç–∞-—Ä–∏–¥–µ—Ä–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
			}
			
			if (check === "soundbw") {
				tickethelp('861411342586347530', soundbw, '971490776695590965', '–ó–≤—É–∫–æ–≤–∏–∫–∞–º–∏', '–ß–ë-–ó–≤—É–∫–æ–≤–∏–∫–∞', 'üî∂', 'f7630c', 'https://drive.google.com/drive/folders/1Tuq_-0sR6qppljvDbb5Rk2eRzLSoS_I6?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –ß–ë-–ó–≤—É–∫–æ–≤–∏–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
				function setpos() {
					var soundchb = i.guild.channels.cache.get('971491181546590248').position;
					i.channel.setPosition(soundchb + 0);
				}
				setTimeout(setpos, 2500);
			}
			
			if (check === "soundrnbw") {
				tickethelp('964967880284311592', soundrainbow, '971490776695590965', '–ó–≤—É–∫–æ–≤–∏–∫–∞–º–∏', '–¶–í–ï–¢-–ó–≤—É–∫–æ–≤–∏–∫–∞', 'üî∑', '0078d7', 'https://drive.google.com/drive/folders/1rgdJ6w4oNWUwDNet-XFXm5CcjEjrD9aA?usp=sharing').catch((e) => {console.log(`–¢–µ—Å—Ç –Ω–∞ –¶–í–ï–¢-–ó–≤—É–∫–æ–≤–∏–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è \n ${e}`)}); 
				function setpos() {
					var soundrainbw = i.guild.channels.cache.get('971491326220722236').position;
					i.channel.setPosition(soundrainbw + 0);
				}
				setTimeout(setpos, 2500);
			}
			
		};
	}
});
//–†–ê–ë–û–¢–ê –° –ò–î–ï–Ø–ú–ò –ò –ñ–ê–õ–û–ë–ê–ú–ò
var useridfor;
client.on("interactionCreate", async i => {
	
	if (i.commandName === "–æ—Ç–≤–µ—Ç–∏—Ç—å") {
		const userid = i.options.getUser('—É—á–∞—Å—Ç–Ω–∏–∫');
		const textansw = i.options.getString('–æ—Ç–≤–µ—Ç');
		const userdm = await client.users.fetch(userid);
		userdm.send(`${textansw}\n\n –ù–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç –≤ –õ–° –±–æ—Ç–∞. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ç–µ–º—É, –ø–∏—à–∏ <@${i.user.id}> –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`).catch((e) => {console.log(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–æ –õ–°, –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ \n ${e}`)});
		i.reply({content:`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n${textansw}\n\n–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${userid}`, ephemeral: true})
		i.guild.channels.cache.get('1024324318232064081').send({
			content:`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –∏–¥–µ—é –∏–ª–∏ –∂–∞–ª–æ–±—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º: \n ${textansw} \n\n –£—á–∞—Å—Ç–Ω–∏–∫—É ${userid}\n–í –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>`,
			ephemeral: false,
		})
	};
});

client.on("interactionCreate", async i => {
	if (!i.isButton) return;
	
	useridfor = i.user.id;
	
	if (i.customId === "idea") {
		
		const ideamodal = new ModalBuilder()
			.setCustomId('ideamodal')
			.setTitle('–ü–æ–¥–∞—Ç—å –∏–¥–µ—é')
		
		const ideafor = new TextInputBuilder()
			.setCustomId('ideafor')
			.setLabel('–ò–¥–µ—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞, –±–æ—Ç–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã')
			.setPlaceholder('–£ –º–µ–Ω—è –µ—Å—Ç—å –∏–¥–µ—è –¥–ª—è...')
			.setStyle(TextInputStyle.Paragraph);
			
		const ideaforrow = new ActionRowBuilder().addComponents(ideafor);
		ideamodal.addComponents(ideaforrow);
		
		await i.showModal(ideamodal);
	}
	
	if (i.customId === "bad") {
		
		const badmodal = new ModalBuilder()
			.setCustomId('badmodal')
			.setTitle('–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É')
		
		const badfor = new TextInputBuilder()
			.setCustomId('badfor')
			.setLabel('–£—á–∞—Å—Ç–Ω–∏–∫, –º—É–∫ –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ')
			.setPlaceholder('–•–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞...')
			.setStyle(TextInputStyle.Paragraph);
			
		const badforrow = new ActionRowBuilder().addComponents(badfor);
		badmodal.addComponents(badforrow);
		
		await i.showModal(badmodal);
	}
	
});

client.on("interactionCreate", async i => {
	if (!i.isModalSubmit()) return;
	try {
		
		if (i.customId === "ideamodal") {
			
			const ideatext = i.fields.getTextInputValue('ideafor');
			const getembed = new EmbedBuilder()
				.setColor('b21f00')
				.setTitle('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ò–¥–µ—è')
				.setDescription(ideatext)
			await i.reply({content: '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–¥–µ—é! –ú—ã –ø—Ä–∏—Å–ª—É—à–∞–µ–º—Å—è –∫ –≤–∞–º!', ephemeral: true});
			
			await i.guild.channels.cache.get('1022147804853981264').send({content: `<@${useridfor}>, –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–¥–µ—é:`, embeds:[getembed]});
			await i.guild.channels.cache.get('1024324318232064081').send({content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–¥–µ—é –≤ –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>, –ø—Ä–æ–≤–µ—Ä—è–π <#1022147804853981264>`, ephemeral:false});
			
		};
		
		if(i.customId === "badmodal") {
			
			const badtext = i.fields.getTextInputValue('badfor');
			const getembed2 = new EmbedBuilder()
            .setColor('b21f00')
            .setTitle('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ñ–∞–ª–æ–±–∞')
            .setDescription(badtext)
            await i.reply({content:'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –ù–∞–¥–µ—é—Å—å, –º—ã —Å–º–æ–∂–µ–º —Ä–µ—à–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É.',ephemeral:true})
			
			await i.guild.channels.cache.get('1022147804853981264').send({content: `<@${useridfor}>, –æ—Ç–ø—Ä–∞–≤–∏–ª –∂–∞–ª–æ–±—É:`, embeds:[getembed2]});
			await i.guild.channels.cache.get('1024324318232064081').send({content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> –æ—Ç–ø—Ä–∞–≤–∏–ª –∂–∞–ª–æ–±—É –≤ –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>, –ø—Ä–æ–≤–µ—Ä—è–π <#1022147804853981264>`, ephemeral:false})
    }
		
		
	} catch (err) {console.log(`–ò–¥–µ—è –∏–ª–∏ –∂–∞–ª–æ–±–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—è \n ${err}`)}
	
	
});

//–ö–û–ú–ê–ù–î–ê "–í–´–î–ê–¢–¨–†–û–õ–¨"

client.on("interactionCreate", async i => {
	
	if (i.commandName === "–≤—ã–¥–∞—Ç—å—Ä–æ–ª—å") {
		try {
			const rolese = i.options.getRole('—Ä–æ–ª—å');
			const userse = i.options.getUser('—É—á–∞—Å—Ç–Ω–∏–∫');
			var role = i.guild.roles.cache.find(role => role.id === rolese.id);
			var user = i.guild.members.cache.get(userse.id);
		
			if (!rolese.editable) {
				await i.reply({content: "–ù–µ –º–æ–≥—É –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –≤—ã—à–µ —Å–≤–æ–µ–π.", ephemeral: true});
			} else {
			
				user.roles.add(role);
			
				await i.reply({content: `–í—ã–¥–∞–ª —Ä–æ–ª—å <@&${role.id}>, <@${userse.id}>`, ephemeral:true,}) &&
				await i.guild.channels.cache.get('1024324318232064081').send({content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> –≤—ã–¥–∞–ª —Ä–æ–ª—å <@&${role.id}> —É—á–∞—Å—Ç–Ω–∏–∫—É <@${userse.id}>, –≤ –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>`, ephemeral:false});
			
			}
		} catch (err) {
			console.log(`–†–æ–ª—å –Ω–µ –≤—ã–¥–∞–ª–∞—Å—å \n ${err}`)
		}
	}
	
	if (i.commandName === "—Å–Ω—è—Ç—å—Ä–æ–ª—å") {
		try {
			const rolese = i.options.getRole('—Ä–æ–ª—å');
			const userse = i.options.getUser('—É—á–∞—Å—Ç–Ω–∏–∫');
			var role = i.guild.roles.cache.find(role => role.id === rolese.id);
			var user = i.guild.members.cache.get(userse.id);
		
			if (!rolese.editable) {
				await i.reply({content: "–ù–µ –º–æ–≥—É —Å–Ω—è—Ç—å —Ä–æ–ª—å –≤—ã—à–µ —Å–≤–æ–µ–π.", ephemeral: true});
			} else {
			
				user.roles.remove(role);
			
				await i.reply({content: `–°–Ω—è–ª —Ä–æ–ª—å <@&${role.id}>, <@${userse.id}>`, ephemeral:true,}) &&
				await i.guild.channels.cache.get('1024324318232064081').send({content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${i.user.id}> —Å–Ω—è–ª —Ä–æ–ª—å <@&${role.id}> —É—á–∞—Å—Ç–Ω–∏–∫—É <@${userse.id}>, –≤ –∫–∞–Ω–∞–ª–µ <#${i.channel.id}>`, ephemeral:false});
			
			}
		} catch (err) {
			console.log(`–†–æ–ª—å –Ω–µ —Å–Ω—è–ª–∞—Å—å \n ${err}`)
		}
	}
	
});
//–†–ê–ó–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–ê–Ø –ß–ê–°–¢–¨ –ë–û–¢–ê
client.on('interactionCreate', async (interaction) => {
    if (!interaction.isChatInputCommand()) return;
    
    if (interaction.commandName === '–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å') {
        const gifs = [
            "https://c.tenor.com/dn_KuOESmUYAAAAC/engage-kiss-anime-kiss.gif",
            "https://c.tenor.com/jnndDmOm5wMAAAAC/kiss.gif",
            "https://c.tenor.com/bM6UK1pmoRQAAAAC/kiss-anime.gif",
            "https://c.tenor.com/A4D3Mk-Y2h4AAAAC/chuunibyou-anime.gif",
            "https://c.tenor.com/jN35LrknUpkAAAAC/test.gif",
        ];
        try {
            const random = Math.floor(Math.random() * gifs.length);
            const userkiss = interaction.options.getMember('–≤—ã–±—Ä–∞—Ç—å');
            const embedhug = new EmbedBuilder()
				.setColor('#b21f00')
				.setTitle('–ü–æ—Ü–µ–ª—É–π—á–∏–∫!')
				.setImage(gifs[random])
            console.log('–ö—Ç–æ-—Ç–æ –æ—Ç–æ—Å–ª–∞–ª —ç—Ç—É –≥–∏—Ñ–∫—É —Å –ø–æ—Ü–µ–ª—É–µ–º:' + gifs[random]);
            interaction.reply({ephermal:false, embeds:[embedhug], content: `<@${interaction.user.id}>, –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) <@${userkiss.id}>`});
        } catch (err) {
            interaction.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
        }
    }

    if (interaction.commandName === '–ø–æ–≥–ª–∞–¥–∏—Ç—å') {
        const gifs = [
            "https://c.tenor.com/E6fMkQRZBdIAAAAC/kanna-kamui-pat.gif",
            "https://c.tenor.com/wLqFGYigJuIAAAAC/mai-sakurajima.gif",
            "https://c.tenor.com/rZRQ6gSf128AAAAC/anime-good-girl.gif",
            "https://c.tenor.com/o_E-CURRMwYAAAAd/anya-forger-loid-forger.gif",
            "https://c.tenor.com/079CvbmFPe8AAAAC/qualidea-code-head-pat.gif",
            "https://c.tenor.com/u_LI3wFaRwYAAAAC/bebe-rub.gif",
        ];
        try {
			const random = Math.floor(Math.random() * gifs.length);
            const userpat = interaction.options.getMember('–≤—ã–±—Ä–∞—Ç—å');
            const embedhug = new EmbedBuilder()
				.setColor('#b21f00')
				.setTitle('–ú–ï–ì–ê–•–ê–†–û–®!')
				.setImage(gifs[random])
            console.log('–ö—Ç–æ-—Ç–æ –æ—Ç–æ—Å–ª–∞–ª —ç—Ç—É –≥–∏—Ñ–∫—É —Å –ø–æ–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ–º:' + gifs[random]);
            interaction.reply({ephermal:false, embeds:[embedhug], content: `<@${interaction.user.id}>, –ø–æ–≥–ª–∞–¥–∏–ª(–∞) <@${userpat.id}>`});
        } catch (err) {
            interaction.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
        }
    }
    
    if (interaction.commandName === '—É–¥–∞—Ä–∏—Ç—å') {
        const gifs = [
                    "https://c.tenor.com/zPoV7oxWt-IAAAAd/slap-chopalah.gif", 
                    "https://c.tenor.com/z-bP0d5aYnMAAAAC/golpe-anime.gif", 
                    "https://c.tenor.com/pHCT4ynbGIUAAAAC/anime-girl.gif", 
                    "https://c.tenor.com/SwMgGqBirvcAAAAC/saki-saki-kanojo-mo-kanojo.gif", 
                    "https://c.tenor.com/p_mMicg1pgUAAAAC/anya-forger-damian-spy-x-family.gif",
                    "https://c.tenor.com/VrWzG0RWmRQAAAAC/anime-punch.gif"
        ];
        try {
			const random = Math.floor(Math.random() * gifs.length);
			const userchapolah = interaction.options.getMember('–≤—ã–±—Ä–∞—Ç—å');
			const embedhug = new EmbedBuilder()
				.setColor('#b21f00')
				.setTitle('–ê–î–°–ö–ò–ô –ß–û–ü–ê–õ–ê–• –¢–ï–ë–ï!')
				.setImage(gifs[random])
			console.log('–ö—Ç–æ-—Ç–æ –æ—Ç–æ—Å–ª–∞–ª —ç—Ç—É –≥–∏—Ñ–∫—É —Å —É–¥–∞—Ä–æ–º:' + gifs[random]);
			interaction.reply({ephermal:false, embeds:[embedhug], content: `<@${interaction.user.id}>, –ø—Ä–æ–ø–∏—Å–∞–ª(–∞) –∞–¥—Å–∫–∏–π —á–æ–ø–∞–ª–∞—Ö <@${userchapolah.id}>`});
		} catch (err) {
            interaction.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
        }
        
    }

	if (interaction.commandName === '–æ–±–Ω—è—Ç—å') {
		const gifs = [
					"https://c.tenor.com/fVzK5G68cYcAAAAC/hugs-cuddle.gif", 
					"https://c.tenor.com/jU9c9w82GKAAAAAC/love.gif", 
					"https://c.tenor.com/W-R9sPkk_IMAAAAC/come-here-hugs.gif", 
					"https://c.tenor.com/kCZjTqCKiggAAAAC/hug.gif", 
					"https://c.tenor.com/h9222Kcym9MAAAAd/cat-bagel.gif"
		];
	
		try {
			const random = Math.floor(Math.random() * gifs.length);
			const userhug = interaction.options.getMember('–≤—ã–±—Ä–∞—Ç—å');
			const embedhug = new EmbedBuilder()
				.setColor('#b21f00')
				.setTitle('–û–±–Ω–∏–º–∞—à–∫–∏!')
				.setImage(gifs[random])
			console.log('someone send this hug gif:' + gifs[random]);
			interaction.reply({ephermal:false, embeds:[embedhug], content: `<@${interaction.user.id}>, –æ–±–Ω—è–ª(–∞) <@${userhug.id}>`});
		} catch (err) {
			interaction.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
		}
    
	}

	if (interaction.commandName === '–æ–±–æ–∑–≤–∞—Ç—å') {
		const gifs = [
			"https://c.tenor.com/Xcr8fHyf84gAAAAC/baka-anime.gif",
			"https://c.tenor.com/9hpTx40GEKsAAAAC/baka-idiot.gif",
			"https://c.tenor.com/bd5bGRCMdwwAAAAd/among-us-sussy-baka-sus-check.gif",
			"https://c.tenor.com/-nd5gZ0KwZwAAAAC/sussy-baka.gif",
			"https://c.tenor.com/rBro6BqK5igAAAAC/sophie-twilight.gif",
		];
		try {
			const random = Math.floor(Math.random() * gifs.length);
			const userbaka = interaction.options.getMember('–≤—ã–±—Ä–∞—Ç—å');
			const embedbaka = new EmbedBuilder()
				.setColor('#b21f00')
				.setTitle('–ë–∞–∫–∞!')
				.setImage(gifs[random])
			console.log('someone send this baka gif:' + gifs[random]);
			interaction.reply({ephermal:false, embeds:[embedbaka], content: `<@${interaction.user.id}>, –æ–±–æ–∑–≤–∞–ª(–∞) –±–∞–∫–æ–π <@${userbaka.id}>`});
		} catch (err) {
			interaction.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
		}
	};
    

});

client.login(token);